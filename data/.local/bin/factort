#!/bin/zsh

RED='\033[1;31m'
GREEN='\033[1;32m'
ORANGE='\033[1;33m'
NC='\033[0m'

usage()
{
    echo -e "${GREEN}[${ORANGE}?${GREEN}]${NC} Usage: $0 <PROJECT>\n"
    exit 1
}

duplicated()
{
    echo -e "${GREEN}[${RED}x${GREEN}]${NC} Directory already exists.\n"
    exit 1
}

randstr() {
    SIZE=$1;
    echo $RANDOM | xargs echo $(date +"%s") | sed 's/ //' | sha512sum | head -c $SIZE; echo;
}

# print header
echo $GREEN
figlet "FactorTwee"
echo "Tweego project scaffold generator v0.1"
echo $NC

# get project name
P_NAME=$1
[ -z "$P_NAME" ] && usage

# header
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Project: $P_NAME"

# creating project directory structure
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Creating directory structure..."
[ -d "$P_NAME" ] && duplicated
mkdir -p $P_NAME/source/css
mkdir -p $P_NAME/source/js

# README file
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Generate README file"
cat >> $P_NAME/README.md <<EOT
# README

Demo readme file for project documentation.
EOT

# build file
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Generate build file"
cat >> $P_NAME/build.sh <<EOT
#!/bin/zsh

tweego -w -o index.html source 
EOT
chmod +x $P_NAME/build.sh


# gitignore file
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Generating .gitignore"
cat >> $P_NAME/.gitignore <<EOT
*.sh
EOT


# main source file
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Generating placeholder code for main scene"
cat >> $P_NAME/source/main.tw <<EOT
:: Start
<<set \$player to { name: "Dan", clan: "" }>>

Your name:
<<textbox "\$player.name" \$player.name>>

<<button "Start the adventure!">>
    <<script>>setup.Player.name = State.variables.player.name;<</script>>
    <<script>>state.display("Prologue", this);<</script>>
<</button>>


:: Prologue
<p>
    Lorem ipsum dolor sit amet.

    <<linkreplace "Continue" t8n>>\
        Lorem ipsum dolor sit amet...

        [[Go to your Home|Home]]
    <</linkreplace>>
</p>


:: Home
<p>You are safe here, <<print(setup.Player.name)>>!</p>
EOT


# meta config source file
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Generating placeholder code for meta config scene"
cat >> $P_NAME/source/meta.tw <<EOT
:: StoryData
{
    "ifid": "",
    "format": "SugarCube",
    "format-version": "2.30.0"
}


:: StoryTitle
Default Adventure

:: StorySubtitle
A Wonderful Adventure

:: StoryAuthor
$USER

:: StoryBanner
Banner

:: StoryCaption
Caption

:: StoryInit
<<script>>
Config.history.controls = true;       // show history controls
Config.saves.autosave = true;         // autosaves every passage
Config.saves.isAllowed = () => true;  // callback to allow/disallow saving the game at the current context

// load/save preprocessing
Config.saves.onLoad = (save) => null;
Config.saves.onSave = (save, details) => null;
<</script>>

:: StoryMenu
[[About]]

/* Customize whole interface */

/*:: StoryInterface
<div id="interface">
	<div id="menu" data-passage="Menu"></div>
	<div id="notifications" data-passage="Notifications">notification</div>
	<div id="passages"></div>
</div>
*/

:: About
Simple adventure template ;)
EOT


# demo js file
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Generating js template"
cat >> $P_NAME/source/js/main.js <<EOT
// player data
let Player = {
    name: 'Dan',
    clan: '',
    days: 1,
    money: 1000
};

setup.Player = Player;
EOT


# demo css file
echo "${GREEN}[${ORANGE}+${GREEN}]${NC} Generating css template"
cat >> $P_NAME/source/css/main.css <<EOT
// style definitions
EOT



# finished!
echo -e "${GREEN}[${ORANGE}!${GREEN}]${NC} All done :)\n"
