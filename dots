#!/bin/zsh

RED='\033[1;31m'
GREEN='\033[1;32m'
ORANGE='\033[1;33m'
NC='\033[0m'

BASEDIR=${0:a:h}
DOTSDIR="${BASEDIR}/data"
EPREFIX="${GREEN}[${ORANGE}+${GREEN}]${NC}"

usage()
{
    echo -e "${GREEN}[${ORANGE}?${GREEN}]${NC} Usage: $0 <action>\n"
    echo -e "\tpack\t- Save system dotfiles to repository"
    echo -e "\tunpack\t- Unpack repository dotfiles to the system"
    echo -e "\tpacsav\t- Save list of installed packages"
    echo -e "\tpacload\t- Install packages from saved list"
    echo -e "\n\n"
    exit 1
}

#
# Pack
#
pack()
{
    [[ -d "${DOTSDIR}/.config" ]]    || mkdir -p "${DOTSDIR}/.config"
    [[ -d "${DOTSDIR}/.local/bin" ]] || mkdir -p "${DOTSDIR}/.local/bin"

    echo -e "${RED}--- PACKING ${HOME}/.config ---${NC}\n"
    cp -TRf $HOME/.config/alacritty $DOTSDIR/.config/alacritty && echo "${EPREFIX} Alacritty"
    cp -TRf $HOME/.config/awesome $DOTSDIR/.config/awesome && echo "${EPREFIX} Awesome"
    cp -TRf $HOME/.config/ranger $DOTSDIR/.config/ranger && echo "${EPREFIX} Ranger"
    cp -TRf $HOME/.config/zsh $DOTSDIR/.config/zsh && echo "${EPREFIX} ZenShell"

    echo -e "\n${RED}--- PACKING ${HOME}/ ---${NC}\n"
    cp -TRf $HOME/.vim $DOTSDIR/.vim && echo "${EPREFIX} .vim"
    cp -f $HOME/.vimrc $DOTSDIR/.vimrc && echo "${EPREFIX} .vimrc"
    cp -f $HOME/.zshrc $DOTSDIR/.zshrc && echo "${EPREFIX} .zshrc"

    echo -e "\n${RED}--- PACKING ${HOME}/.local/bin ---${NC}\n"
    cp -f $HOME/.local/bin/factorc $DOTSDIR/.local/bin/factorc && echo "${EPREFIX} factorc"
    cp -f $HOME/.local/bin/factorj $DOTSDIR/.local/bin/factorj && echo "${EPREFIX} factorj"
    cp -f $HOME/.local/bin/factorp $DOTSDIR/.local/bin/factorp && echo "${EPREFIX} factorp"
    cp -f $HOME/.local/bin/factorpy $DOTSDIR/.local/bin/factorpy && echo "${EPREFIX} factorpy"
    cp -f $HOME/.local/bin/multimon.sh $DOTSDIR/.local/bin/multimon.sh && echo "${EPREFIX} multimon.sh"
    cp -f $HOME/.local/bin/sshot $DOTSDIR/.local/bin/sshot && echo "${EPREFIX} sshot"
    cp -f $HOME/.local/bin/soundsh $DOTSDIR/.local/bin/soundsh && echo "${EPREFIX} soundsh"

    echo -e "\n${GREEN}All done ;)${NC}\n"
    exit 0
}

#
# Unpack
#
unpack()
{
    [[ -d "${HOME}/.config" ]] || mkdir "${HOME}/.config"
    [[ -d "${HOME}/.local/bin" ]] || mkdir "${HOME}/.local/bin"

    echo -e "${RED}--- UNPACKING ${HOME}/.config ---${NC}\n"
    [[ -d $DOTSDIR/.config/alacritty ]] && cp -TRf $DOTSDIR/.config/alacritty $HOME/.config/alacritty && echo "${EPREFIX} Alacritty"
    [[ -d $DOTSDIR/.config/awesome ]] && cp -TRf $DOTSDIR/.config/awesome $HOME/.config/awesome && echo "${EPREFIX} Awesome"
    [[ -d $DOTSDIR/.config/ranger ]] && cp -TRf $DOTSDIR/.config/ranger $HOME/.config/ranger && echo "${EPREFIX} Ranger"
    [[ -d $DOTSDIR/.config/zsh ]] && cp -TRf $DOTSDIR/.config/zsh $HOME/.config/zsh && echo "${EPREFIX} ZenShell"

    echo -e "\n${RED}--- UNPACKING ${HOME}/ ---${NC}\n"
    [[ -d $DOTSDIR/.vim ]] && cp -TRf $DOTSDIR/.vim $HOME/.vim && echo "${EPREFIX} .vim"
    [[ -f $DOTSDIR/.vimrc ]] && cp -f $DOTSDIR/.vimrc $HOME/.vimrc && echo "${EPREFIX} .vimrc"
    [[ -f $DOTSDIR/.zshrc ]] && cp -f $DOTSDIR/.zshrc $HOME/.zshrc && echo "${EPREFIX} .zshrc"

    echo -e "\n${RED}--- UNPACKING ${HOME}/.local/bin ---${NC}\n"
    [[ -f $DOTSDIR/.local/bin/factorc ]] && cp -f $DOTSDIR/.local/bin/factorc $HOME/.local/bin/factorc && echo "${EPREFIX} factorc"
    [[ -f $DOTSDIR/.local/bin/factorj ]] && cp -f $DOTSDIR/.local/bin/factorj $HOME/.local/bin/factorj && echo "${EPREFIX} factorj"
    [[ -f $DOTSDIR/.local/bin/factorp ]] && cp -f $DOTSDIR/.local/bin/factorp $HOME/.local/bin/factorp && echo "${EPREFIX} factorp"
    [[ -f $DOTSDIR/.local/bin/factorpy ]] && cp -f $DOTSDIR/.local/bin/factorpy $HOME/.local/bin/factorpy && echo "${EPREFIX} factorpy"
    [[ -f $DOTSDIR/.local/bin/multimon.sh ]] && cp -f $DOTSDIR/.local/bin/multimon.sh $HOME/.local/bin/multimon.sh && echo "${EPREFIX} multimon.sh"
    [[ -f $DOTSDIR/.local/bin/sshot ]] && cp -f $DOTSDIR/.local/bin/sshot $HOME/.local/bin/sshot && echo "${EPREFIX} sshot"
    [[ -f $DOTSDIR/.local/bin/soundsh ]] && cp -f $DOTSDIR/.local/bin/soundsh $HOME/.local/bin/soundsh && echo "${EPREFIX} soundsh"

    echo -e "\n${GREEN}All done ;)${NC}\n"
    exit 0
}

#
# Pacsav
#
pacsav()
{
    echo -e "${RED}--- FREEZING PACKAGES ---${NC}\n"
    pacman -Qqe > $DOTSDIR/pkglist.txt

    echo -e "\n${GREEN}All done ;)${NC}\n"
    exit 0
}

#
# Pacload
#
pacload()
{
    echo -e "${RED}--- INSTALLING PACKAGES ---${NC}\n"

    if [[ -f "${DOTSDIR}/pkglist.txt" ]]; then
        pacman -S --needed - < $DOTSDIR/pkglist.txt
        echo -e "\n${GREEN}All done ;)${NC}\n"
    else
        echo -e "${RED}Nothing to be done...${NC}\n"
        echo -e "\n${GREEN}All done ;)${NC}\n"
    fi

    exit 0
}


#
# print header
echo $GREEN
figlet "DotS"
echo "Dotfiles repository manager v0.1"
echo $NC

# get project parameters
ACTION=$1
if [ -z "$ACTION" ]; then
    usage
fi

# perform action
[[ $ACTION == "pack" ]]    && pack
[[ $ACTION == "unpack" ]]  && unpack
[[ $ACTION == "pacsav" ]]  && pacsav
[[ $ACTION == "pacload" ]] && pacload

# default
usage
